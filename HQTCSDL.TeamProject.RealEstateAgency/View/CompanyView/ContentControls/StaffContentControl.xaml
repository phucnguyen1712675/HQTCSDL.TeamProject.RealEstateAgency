<UserControl
    x:Class="HQTCSDL.TeamProject.RealEstateAgency.View.CompanyView.ContentControls.StaffContentControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:HQTCSDL.TeamProject.RealEstateAgency.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
    d:DesignHeight="{Binding ConverterParameter=0.95, Converter={converter:RatioConverter}, Source={x:Static SystemParameters.PrimaryScreenHeight}}"
    d:DesignWidth="{Binding ConverterParameter=0.5, Converter={converter:RatioConverter}, Source={x:Static SystemParameters.PrimaryScreenWidth}}"
    Background="{DynamicResource MaterialDesignBackground}"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <converter:IntegerToIsEnabledPreviousButtonConverter x:Key="previousConverter" />
            <converter:IntegerToIsEnabledNextButtonConverter x:Key="nextConverter" />
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/ResourceDictionary/CompanyView/ContentControls/StaffContentResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <ComboBox
                x:Name="FilledComboBox"
                Width="256"
                md:HintAssist.Hint="Chi nhánh"
                ItemTemplate="{StaticResource agencyComboBoxItemTemplate}"
                ItemsSource="{Binding HasEmployeesAgencyCollection}"
                SelectedIndex="{Binding FilledSelectedIndex}"
                Style="{StaticResource MaterialDesignFilledComboBox}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding SelectionChangedFilledComboBoxCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <ListView
                x:Name="EmployeeListView"
                Grid.Row="1"
                Width="650"
                Height="520"
                ItemContainerStyle="{StaticResource listViewItemContainerStyle}"
                ItemTemplate="{StaticResource staffItemTemplate}"
                ItemsSource="{Binding Source={StaticResource sortedStaffsSource}}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ScrollViewer.VerticalScrollBarVisibility="Auto">
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
            </ListView>
            <StackPanel
                Grid.Row="2"
                Margin="0,0,0,25"
                HorizontalAlignment="Center"
                Orientation="Horizontal">
                <Button
                    x:Name="previousButton"
                    Width="100"
                    Height="45"
                    Margin="0,0,10,0"
                    Command="{Binding PreviousCommand}"
                    Content="Previous"
                    IsEnabled="{Binding PagingSelectedIndex, Converter={StaticResource previousConverter}}" />
                <ComboBox
                    Name="pagingInfoComboBox"
                    Width="100"
                    Height="{Binding ActualHeight, ElementName=previousButton}"
                    ItemTemplate="{StaticResource pageItemTemplate}"
                    ItemsSource="{Binding Pages}"
                    SelectedIndex="{Binding PagingSelectedIndex}"
                    Style="{StaticResource MaterialDesignFilledComboBox}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding SelectionChangedPagingComboBoxCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <Button
                    x:Name="nextButton"
                    Width="100"
                    Height="45"
                    Margin="10,0,0,0"
                    Command="{Binding NextCommand}"
                    Content="Next">
                    <Button.IsEnabled>
                        <MultiBinding
                            Converter="{StaticResource nextConverter}"
                            Mode="TwoWay"
                            UpdateSourceTrigger="PropertyChanged">
                            <Binding Path="Pages.Count" />
                            <Binding Path="PagingSelectedIndex" />
                        </MultiBinding>
                    </Button.IsEnabled>
                </Button>
            </StackPanel>
        </Grid>
        <md:PopupBox
            Margin="20"
            HorizontalAlignment="Right"
            VerticalAlignment="Bottom"
            Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}">
            <StackPanel>
                <!--<Button
                    Background="{DynamicResource PrimaryHueMidBrush}"
                    Command="{Binding RunChangeSalaryCommand}"
                    Content="{md:PackIcon Kind=CashUsd,
                                          Size=20}"
                    Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" />-->
                <Button Command="{Binding RunAddNewStaffCommand}" Content="{md:PackIcon Kind=AccountPlus, Size=20}">
                    <!--  mix up the colours by bringing in a named palette (see merged dictionaries at top)  -->
                    <Button.Background>
                        <SolidColorBrush Color="{StaticResource GreenPrimary500}" />
                    </Button.Background>
                    <Button.Foreground>
                        <SolidColorBrush Color="{StaticResource GreenPrimary500Foreground}" />
                    </Button.Foreground>
                </Button>
            </StackPanel>
        </md:PopupBox>
    </Grid>
</UserControl>
